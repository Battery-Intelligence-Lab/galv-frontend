version: "3.8"

services:
  mockserver:
    image: mockserver/mockserver:5.14.0
    ports:
      - "1080:1080"
    environment:
      MOCKSERVER_PERSIST_EXPECTATIONS: "true"
      MOCKSERVER_PERSISTED_EXPECTATIONS_PATH: /persisted_expectations/expectations.json
      MOCKSERVER_INITIALIZATION_JSON_PATH: /persisted_expectations/expectations.json
      MOCKSERVER_ENABLE_CORS_FOR_ALL_RESPONSES: "true"
      MOCKSERVER_CORS_ALLOW_ORIGIN: "*"
      MOCKSERVER_CORS_ALLOW_METHODS: "GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH"
      MOCKSERVER_CORS_ALLOW_HEADERS: "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With, Accept, Origin, X-Forwarded-For, X-Forwarded-Proto, X-Forwarded-Host, X-Forwarded-Port, X-Forwarded-Prefix, X-Forwarded-Server, X-Real-IP, X-Forwarded-By, X-Forwarded-Host, X-Forwarded-Proto, X-Forwarded-Port, X-Forwarded-Prefix, X-Forwarded-Server, X-Real-IP"
      MOCKSERVER_CORS_EXPOSE_HEADERS: "Set-Cookie, Access-Control-Allow-Headers, Access-Control-Allow-Credentials, Access-Control-Allow-Origin, Access-Control-Allow-Methods, Access-Control-Allow-Headers, Access-Control-Expose-Headers, Access-Control-Max-Age, Access-Control-Request-Headers, Access-Control-Request-Method, Age, Allow, Cache-Control, Connection, Content-Disposition, Content-Encoding, Content-Length, Content-Range, Content-Type, Date, ETag, Expires, Last-Modified, Location, Pragma, Proxy-Authenticate, Proxy-Authorization, Public-Key-Pins, Retry-After, Server, Set-Cookie, Strict-Transport-Security, Trailer, Transfer-Encoding, Upgrade, Vary, Via, Warning, WWW-Authenticate, X-Content-Type-Options, X-Correlation-ID, X-Frame-Options, X-Powered-By, X-XSS-Protection"
      MOCKSERVER_CORS_ALLOW_CREDENTIALS: "false"
      MOCKSERVER_CORS_MAX_AGE_IN_SECONDS: "300"
    volumes:
      - ./src/api_codegen/schema.json:/config/schema.json
      - ./.mockserver/persisted_expectations:/persisted_expectations

  setup-expectations:
    # This container is used to set up the mockserver with the expectations
    # defined in the schema.json file. It is run once before the mockserver
    # container is started.
    image: curlimages/curl:8.5.0
    command: >
      -X PUT http://mockserver:1080/mockserver/openapi -d '{"specUrlOrPayload": "/config/schema.json"}'
    depends_on:
      - mockserver
    restart: "on-failure"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile_dev
    depends_on:
      - mockserver
    env_file:
      - .env.vite
    environment:
      GALV_API_BASE_URL: "http://localhost:1080"
    restart: unless-stopped
    ports:
      - "8002:80"
    volumes:
      - ./src:/app/src
    command: bash -c "./fix_base_path.sh && pnpm start --host --port 80"
  #    command: tail -F anything

  frontend_test:
    build:
      context: .
      dockerfile: Dockerfile_dev
    env_file:
      - .env.vite
    restart: "on-failure"
    command: "pnpm test"
